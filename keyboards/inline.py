from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config_reader import config
from utils import faq_data

def main_menu():
    buttons = [
        [InlineKeyboardButton(text="üéûÔ∏è –ø–æ—Å–º–æ—Ç—Ä—é –∞—Ñ–∏—à—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", callback_data="events")],
        [InlineKeyboardButton(text="üéüÔ∏è –ø–æ—Å–º–æ—Ç—Ä—é –º–æ–∏ –±–∏–ª–µ—Ç—ã", callback_data="manage_tickets")],
        [InlineKeyboardButton(text="üóùÔ∏è —É–∑–Ω–∞—é –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏", callback_data="loyalty_info")],
        [InlineKeyboardButton(text="ü´Ç —É–∑–Ω–∞—é –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton(text="üñáÔ∏è –ø–æ–ª—É—á—É –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —á–µ–∫-–ª–∏—Å—Ç—ã", callback_data="get_checklist")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def loyalty_info_keyboard():
    buttons = [
        [InlineKeyboardButton(text="‚Üê –Ω–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def events_keyboard(events):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π (–∫—Ä–∞—Ç–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è)."""
    buttons = []
    for event in events:
        buttons.append(
            [InlineKeyboardButton(text=event['ShortName'], callback_data=f"event_{event['ID']}")]
        )
    buttons.append([InlineKeyboardButton(text="‚Üê –Ω–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def event_details_keyboard(event_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç –∏–ª–∏ –Ω–∞–∑–∞–¥."""
    buttons = [
        [InlineKeyboardButton(text="—Ö–æ—á—É —Å–≤–æ–π –±–∏–ª–µ—Ç–∏–∫!", callback_data=f"buy_{event_id}")],
        [InlineKeyboardButton(text="‚Üê —Å–æ—Ç–≤–æ—Ä—é —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ", callback_data="events")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def confirm_booking_keyboard(event_id):
    buttons = [
        [InlineKeyboardButton(text="–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, –≤–æ–∑—å–º–∏ –º–æ–∏ –¥–µ–Ω—å–≥–∏!", callback_data=f"book_{event_id}")],
        [InlineKeyboardButton(text="‚Üê —Å–æ—Ç–≤–æ—Ä—é —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ", callback_data="events")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def check_subscription_keyboard():
    buttons = [
        [InlineKeyboardButton(text="–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ª—É—á—à–∏–π –∫–∞–Ω–∞–ª", url=f"tg://resolve?domain={config.channel_username}")],
        [InlineKeyboardButton(text="–≥–æ—Ç–æ–≤–æ, –ø—Ä–æ–≤–µ—Ä—è–π!", callback_data="check_subscription")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def checklists_keyboard(files: list):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —á–µ–∫-–ª–∏—Å—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –ò–ù–î–ï–ö–° –≤ callback_data."""
    buttons = []
    for i, file_name in enumerate(files):
        button_text = file_name.replace('.pdf', '').replace('_', ' ').capitalize()
        buttons.append(
            [InlineKeyboardButton(text=f"üìÑ {button_text}", callback_data=f"checklist_{i}")]
        )
    buttons.append([InlineKeyboardButton(text="‚Üê –Ω–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def my_tickets_list_keyboard(orders_with_events: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤."""
    buttons = []
    for order, event in orders_with_events:

        date_str = event['datetime_obj'].strftime('%d.%m.%Y')

        buttons.append([
            InlineKeyboardButton(
                text=f"{event['ShortName']} ({date_str})",
                callback_data=f"view_ticket_{order[0]}"
            )
        ])
    buttons.append([InlineKeyboardButton(text="‚Üê –Ω–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def ticket_actions_keyboard(order_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞."""
    buttons = [
        [InlineKeyboardButton(text="‚ùå –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data=f"confirm_cancel_{order_id}")],
        [InlineKeyboardButton(text="‚Üê –∫ —Å–ø–∏—Å–∫—É –±–∏–ª–µ—Ç–æ–≤", callback_data="manage_tickets")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def confirm_cancellation_keyboard(order_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã."""
    buttons = [
        [InlineKeyboardButton(text="–¥–∞, —è —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω!", callback_data=f"final_cancel_{order_id}")],
        [InlineKeyboardButton(text="–Ω–µ—Ç, —è –ø–µ—Ä–µ–¥—É–º–∞–ª", callback_data=f"view_ticket_{order_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def already_booked_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ –±–∏–ª–µ—Ç —É–∂–µ –∫—É–ø–ª–µ–Ω."""
    buttons = [
        [InlineKeyboardButton(text="üéüÔ∏è –ø–æ—Å–º–æ—Ç—Ä—é –º–æ–∏ –±–∏–ª–µ—Ç—ã", callback_data="manage_tickets")],
        [InlineKeyboardButton(text="‚Üê —Å–æ—Ç–≤–æ—Ä—é —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ", callback_data="events")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def faq_list_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ FAQ_DATA."""
    buttons = []
    for key, (button_text, _) in faq_data.FAQ_DATA.items():
        buttons.append(
            [InlineKeyboardButton(text=button_text, callback_data=f"faq_{key}")]
        )
    buttons.append([InlineKeyboardButton(text="‚Üê –Ω–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def faq_answer_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å (—Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥")."""
    buttons = [
        [InlineKeyboardButton(text="‚Üê –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º", callback_data="faq")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def feedback_rating_keyboard(order_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Ü–µ–Ω–∫–∞–º–∏ –æ—Ç 1 –¥–æ 5."""
    buttons = [
        [
            InlineKeyboardButton(text=str(i), callback_data=f"rate_{i}_{order_id}") for i in range(1, 6)
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def payment_keyboard(payment_url: str, payment_id: str):
    buttons = [
        [InlineKeyboardButton(text="‚Üí –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=payment_url)],
        [InlineKeyboardButton(text="‚úîÔ∏è —è –æ–ø–ª–∞—Ç–∏–ª, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data=f"check_payment_{payment_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def promo_code_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —à–∞–≥–∞ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º."""
    buttons = [
        [InlineKeyboardButton(text="—É –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥! ü´∞", callback_data="has_promo")],
        [InlineKeyboardButton(text="–ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ—Ç ü•∫", callback_data="no_promo")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def loyalty_info_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏."""
    buttons = [
        # --- –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê ---
        [InlineKeyboardButton(text="ü´Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="invite_friend")],
        [InlineKeyboardButton(text="‚Üê –Ω–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)